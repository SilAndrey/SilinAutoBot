from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = "8134362274:AAGoR7CvapHxk1sWENiluhiBTRzGnXPY0gw"
OWNER_ID = 487330910

user_data = {}

STEP_NAME = 1
STEP_PHONE = 2
STEP_BIZ = 3

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_data[chat_id] = {"step": STEP_NAME}
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –∑–∞—è–≤–∫—É –Ω–∞ Telegram-–±–æ—Ç–∞ –¥–ª—è —Ç–µ–±—è.\nüìù –í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text

    if chat_id not in user_data:
        await start(update, context)
        return

    step = user_data[chat_id].get("step")

    if step == STEP_NAME:
        user_data[chat_id]["name"] = text
        user_data[chat_id]["step"] = STEP_PHONE
        await update.message.reply_text("–û–∫, –≤–≤–µ–¥–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏:")

    elif step == STEP_PHONE:
        user_data[chat_id]["phone"] = text
        user_data[chat_id]["step"] = STEP_BIZ
        await update.message.reply_text("–ö–∞–∫–æ–π —É —Ç–µ–±—è –±–∏–∑–Ω–µ—Å –∏–ª–∏ –∑–∞—á–µ–º –Ω—É–∂–µ–Ω –±–æ—Ç?")

    elif step == STEP_BIZ:
        user_data[chat_id]["biz"] = text
        info = user_data[chat_id]

        msg = f"‚ú® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
        msg += f"–ò–º—è: {info['name']}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {info['phone']}\nüíº –ë–∏–∑–Ω–µ—Å / –∑–∞–¥–∞—á–∞: {info['biz']}"

        await context.bot.send_message(chat_id=OWNER_ID, text=msg)
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –Ø —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Å—å ‚ú®")

        user_data.pop(chat_id)

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
